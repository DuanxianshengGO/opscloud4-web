{
  "_element": "en",
  "_name": "English",
  "hello": "Hello",
  "common": {
    "ok": "Ok",
    "cancel": "Cancel",
    "submit": "Submit",
    "save": "Save",
    "agree": "Agree",
    "reject": "Reject",
    "view": "View",
    "delete": "Delete",
    "edit": "Edit",
    "approval": "Approval",
    "remove": "Remove",
    "tag": "Tag",
    "close": "Close",
    "add": "Add",
    "batchDeletion": "Batch Deletion",
    "all": "All",
    "pleaseEnterContent": "Please enter content",
    "env": "Env",
    "tags": "Tags",
    "operate": "Operate",
    "history": "History",
    "noInformationAvailable": "No information available",
    "search": {
      "search": "Enter keyword query",
      "searchApplication": "Search and select an application",
      "searchJob": "Search and select an job",
      "searchProject": "Search and select an project"
    },
    "select": {
      "select": "Please select",
      "selectDeployment": "Select deployment",
      "selectDatasourceInstance": "Select dataSource instance"
    },
    "active": "Active",
    "activeOptions": {
      "active": "Active",
      "inactive": "Inactive"
    }
  },
  "application": {
    "name": "Application Name",
    "application": "Application",
    "boundResources": "Bound Resource",
    "jobs": "Leo Job",
    "authorizedUsers": "Authorized User",
    "active": "Active"
  },
  "leo": {
    "build": {
      "jobName": "Job Name",
      "jobKey": "Job Key",
      "sshUrl": "GitLab SSH URL",
      "queryTags": "Query Tags",
      "branch": "Branch",
      "deployOptions": "Deploy Options",
      "autoDeploy": "Automatically deploy after build completed",
      "project": "Project",
      "versionName": "Version Name",
      "versionDesc": "Version Desc",
      "doBuild": "Do Build",
      "deployment": "Deployment",
      "selectDeployment": "Select deployment",
      "name": "Name",
      "preferredBranch": "Preferred Branch",
      "latestBuild": "Latest Build",
      "builds": "Builds",
      "build": "Build",
      "committed": "committed",
      "details": {
        "startTime": "Start Time",
        "buildResult": "Build Result",
        "versionName": "Version Name",
        "sshUrl": "Ssh Url",
        "branch": "Branch",
        "commit": "Commit",
        "env": "Environment",
        "jenkins": "Jenkins",
        "image": "Image",
        "imageTag": "Image Tag",
        "verified": "Verified",
        "notVerified": "Not verified"
      },
      "noVersionDesc": "User did not fill in version description",
      "stopBuilding": "Stop building",
      "consoleLog": "Console log",
      "editBuildDetails": "Edit Build Details",
      "buildDetail": "Build Details",
      "versionInformation": "Version Information",
      "buildConfig": "Build Config"
    },
    "deploy": {
      "createDeployTask": "Create Deploy Task",
      "deploymentVersionDetails": "Task & Kubernetes Deployment Version Details",
      "latestDeploymentTasks": "Latest Deployment Tasks",
      "buildJobName": "Build Job Name",
      "deployment": "Deployment",
      "deployType": "Deploy Type",
      "deployTypes": {
        "rolling": "Rolling",
        "rollingDesc": "Progressively create a new version (rolling ratio 25%), then stop the old version and automatically complete the entire process",
        "redeploy": "Redeploy",
        "redeployDesc": "Do not change the version, just restart all copies on a rolling basis. Offline environment comes back online",
        "offline": "Offline",
        "offlineDesc": "Allow non-production environments and canary environments to go offline"
      },
      "details": {
        "startTime": "Start Time"
      },
      "deploymentVersion": {
        "name": "Group Info",
        "resourcesLimits": "Resources Limits",
        "replicas": "Replicas"
      },
      "releaseVersion": "Release Version",
      "deployDesc": "Deploy Desc",
      "searchReleaseVersion": "Search and select an release version",
      "doDeploy": "Do Deploy",
      "deployHistory": "Deploy History",
      "deployResult": "Deploy Result",
      "deploymentDetailsSnapshot": "Deployment Details Snapshot",
      "viewDeploymentSnapshot": "View deployment snapshot"
    },
    "pod": {
      "podIp": "Pod IP",
      "startTime": "Start Time",
      "restart": "Restart Count"
    },
    "job": {
      "jobEnv": "Job Environment"
    }
  },
  "kubeTerm": {
    "selectAllContainers": "Select all containers",
    "viewContainerLogs": "View selected container logs",
    "loginContainerTerminal": "Login to the selected container terminal",
    "commandSynchronization": "Command Synchronization",
    "pod": {
      "podIp": "Pod IP",
      "startTime": "Start Time",
      "versionName": "Version Name",
      "image": "Image",
      "restart": "Restart Count"
    }
  },
  "workOrder": {
    "workOrderOptions": "WorkOrder Options",
    "approvalOptions": "Approval Options",
    "applicationDescription": "Application Description",
    "approvalProcess": "Approval Process",
    "opinionOfApprover": "Opinion of Approver",
    "theApplicantSeemsToHaveForgottenToWrite": "The applicant seems to have forgotten to write",
    "numberOf": "No.",
    "name": "Name",
    "applicant": "Applicant",
    "phase": "Phase",
    "applicationTime": "Time",
    "selectAWorkOrderType": "Select a work order type",
    "approvedBy": "Approved by",
    "selectApprover": "Select approver",
    "automaticAssign": "Automatic Assign",
    "roleOptions": {
      "user": "User",
      "qa": "Quality Assurance",
      "admin": "Admin"
    },
    "onsTopicV5Ticket": {
      "instanceName": "Aliyun",
      "onsInstance": "ONS Instance",
      "messageType": "Message Type",
      "desc": "Desc",
      "topicDesc": "Must start with 'TOPIC_' and contain uppercase English, numbers, and underscores (_), with a maximum of 60 characters",
      "messageTypes": {
        "normal": {
          "name": "Normal Message",
          "desc": "Normal messages are applicable to scenarios such as asynchronous decoupling between systems, load shifting, Log Service, large-scale cache synchronization between brokers, and real-time computing and analysis. For more information, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/normal-messages"
        },
        "fifo": {
          "name": "Ordered Message",
          "desc": "Ordered messages are an advanced type of messages that are provided by Message Queue for Apache RocketMQ. Ordered messages are applicable to scenarios such as orderly event processing, matching transactions, and real-time synchronization of incremental data. For more information, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/ordered-messages-1"
        },
        "delay": {
          "name": "Scheduled/Delayed Message",
          "desc": "A scheduled message is sent to a RocketMQ broker and delivered at a specified point in time after the message is sent. For example, you can specify the RocketMQ broker to deliver the message at 15:00:00 on January 1, 2016. A delayed message is sent to a RocketMQ broker and delivered after a specified period of time, for example, 30 minutes after the message is sent. For more information, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/scheduled-and-delayed-messages"
        },
        "transaction": {
          "name": "Transaction Message",
          "desc": "Message Queue for Apache RocketMQ provides a distributed transaction processing feature that is similar to X/Open XA to ensure transaction consistency by using transactional messages. For more information, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/transactional-messages"
        }
      }
    },
    "onsGroupV5Ticket": {
      "deliveryOrder": "Delivery Order",
      "deliveryOrderTypes": {
        "concurrently": {
          "name": "Concurrent Delivery",
          "desc": "In this mode, messages delivered by a broker are concurrently processed based on the policy of ensuring high throughput, and no order dependency exists between messages. Even ordered messages that belong to the same message group are also delivered out of order. For more information, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/consumer-groups"
        },
        "orderly": {
          "name": "Ordered Delivery",
          "desc" : "In ordered delivery mode, consumers can obtain messages only in the order in which they are grouped. If a message is not submitted, consumers cannot obtain subsequent messages. For more information, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/consumer-groups"
        }
      },
      "consumptionRetryPolicy": "Consumption Retry Policy",
      "retryPolicy": {
        "defaultRetryPolicy": {
          "type": "DefaultRetryPolicy",
          "text": "Exponential Backoff",
          "desc": "In concurrent delivery mode, the interval at which the system retries message consumption increases as the number of retries increases. For more information about the retry intervals, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/consumption-retries"
        },
        "fixedRetryPolicy": {
          "type": "FixedRetryPolicy",
          "text": "Fixed Interval",
          "desc": "If a fixed interval is used, PushConsumer retries locally at the fixed interval. For more information, click https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/consumption-retries"
        }
      },
      "maximumRetries": "Maximum Retries",
      "desc": "Desc",
      "gidDesc": "Must start with 'GID_' and can only contain uppercase letters, numbers, and underscores (_), with a maximum of 60 characters"
    }
  },
  "server": {
    "name": "Name",
    "serverGroup": "Server Group",
    "sn": "SN",
    "ip": "IP",
    "env": "Env",
    "asset": "Asset",
    "active": "Active",
    "monitor": "Monitor",
    "accounts": "Account",
    "tags": "Tag"
  },
  "webTerm": {
    "layoutModeOptions": {
      "doubleColumn": "Double column",
      "singleColumn": "Single column"
    },
    "loginUserTypeOptions": {
      "lowPrivilege": "Low privilege",
      "privilege": "Privilege"
    },
    "commandSync": "Command Sync",
    "fullScreen": "Full Screen",
    "terminalSettings": "Terminal Settings",
    "resize": "Resize",
    "loginAll": "Login All",
    "logoutAll": "Logout All",
    "settings": {
      "userProfiles": "User Profiles",
      "foreground": "Foreground",
      "background": "Background",
      "cursor": "Cursor",
      "cursorAccent": "Cursor Accent",
      "selection": "Selection",
      "windowsRows": "Windows Rows"
    }
  },
  "arms": {
    "name": "Application Real-Time Monitoring Service (ARMS)"
  },
  "page": {
    "demo": {
      "playground": {
        "locales": {
          "text": "D2Admin is a fully open source and free enterprise back-end product front-end integration solution, using the latest front-end technology stack, has prepared most of the project preparations, and with a lot of sample code to help the management system agile development."
        }
      }
    }
  }
}
